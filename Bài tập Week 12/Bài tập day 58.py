from operator import truediv
import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import streamlit.components.v1 as components
import pygwalker as pyg
import io

st.title("üöÄ Ph√¢n t√≠ch d·ªØ li·ªáu t·ª´ file CSV")

uploaded_file = st.file_uploader("Ch·ªçn file CSV", type=["csv"])
if uploaded_file is not None:
    df = pd.read_csv(io.StringIO(uploaded_file.getvalue().decode("utf-8")))
    st.subheader("D·ªØ li·ªáu ban ƒë·∫ßu")
    st.dataframe(df.head())
    st.write("S·ªë d√≤ng:", df.shape[0])
    st.write("S·ªë c·ªôt:", df.shape[1])

    st.subheader("Th√¥ng tin m√¥ t·∫£ d·ªØ li·ªáu")
    st.write("C√°c th·ªëng k√™ c∆° b·∫£n:")
    st.dataframe(df.describe())
    st.write("Ki·ªÉu d·ªØ li·ªáu:")
    st.write(df.dtypes)
    st.write("S·ªë gi√° tr·ªã thi·∫øu:")
    st.write(df.isnull().sum())


    option = st.selectbox("Ch·ªçn c·ªôt ƒë·ªÉ ph√¢n t√≠ch", df.columns)
    if option:
        st.subheader(f"Ph√¢n t√≠ch d·ªØ li·ªáu c·ªôt: {option}")
        st.write(df[option].describe())
        st.write(df[option].value_counts())
        st.write(df[option].isnull().sum())


        st.subheader("Bi·ªÉu ƒë·ªì ph√¢n t√≠ch")
        fig, ax = plt.subplots()
        sns.boxplot(x=df[option], ax=ax)
        st.pyplot(fig)
        
    option_corr = st.multiselect("Ch·ªçn c·ªôt ƒë·ªÉ ph√¢n t√≠ch", df.columns)

    if option_corr:
        st.subheader(f"H·ªá s·ªë t∆∞∆°ng quan gi·ªØa c√°c c·ªôt: {option_corr}")
        corr_matrix = df[option_corr].corr()
        st.write(corr_matrix)
        fig, ax = plt.subplots()
        sns.heatmap(corr_matrix, annot=True, cmap="coolwarm", ax=ax)
        st.pyplot(fig)

        st.subheader("T·∫£i file v·ªõi c·ªôt ƒë√£ ch·ªçn")
        st.download_button(
            label="üì• T·∫£i xu·ªëng file CSV",
            data=df[option_corr].to_csv(index=False),
            file_name="du_lieu.csv",
            mime="text/csv"
        )

    st.divider()
    with st.expander("üîç Ph√¢n t√≠ch d·ªØ li·ªáu t∆∞∆°ng t√°c v·ªõi PygWalker", expanded=True):
        if st.button("‚öôÔ∏è T·∫£i PygWalker"):
            pyg_html = pyg.walk(df, return_html=True)
            if pyg_html:
                components.html(str(pyg_html), height=1000, scrolling=True)
